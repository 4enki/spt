@mixin antialias {
  -moz-osx-font-smoothing: grayscale;
   -webkit-font-smoothing: antialiased;
           font-smoothing: antialiased;
}

@mixin text-size-adjust($value: none) {
  -webkit-text-size-adjust: $value;
     -moz-text-size-adjust: $value;
      -ms-text-size-adjust: $value;
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function slug($string) {
  @return to-lower-case(replace($string, ' ', '-'));
}

@function em($pixels, $context: $_FONT_SIZE) {
  $em : $pixels / $context;
  @return #{$em}em;
}

@function rem($value) {
  $rem : $value / $font-size-base;
  @return #{$rem}rem;
}

@function up($selector) {
  $elementList : nth($selector, 1);
  $elements : length($elementList);

  @if $elements > 1 {
    $parentElement : nth($elementList, 1);
    @return $parentElement;
  } @else {
    @return null;
  }
}

@mixin size($width, $height: $width) {
  height: $height;
  width: $width;
}

// Псевдо-элементы
@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

// ellipsis
@mixin text-overflow($max-width) {
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin hidden {
  display: none !important;
  visibility: hidden !important;
}

